@using Umbraco.Cms.Core.Models
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Web.Common.PublishedModels
@using KivioCMS.HelperClasses
@using Umbraco.Cms.Core.Models.PublishedContent;
@using Umbraco.Extensions;
<script src="~/js/slickControls.js"></script>

@inherits UmbracoViewPage<BlockListItem>

@{
    var row = (ProductCarousel)Model.Content;
    if (row == null) return;
    // Access the link
    var link = row.Value<Link>("allProductsButtonLink");
    var centeredImages = row.Value<int>("centeredImages");

    var uniqueCSSId = GeneralConfigs.AddStyle(row.CustomCss ?? string.Empty);
}

<div class="@uniqueCSSId">
    <section>
        <div class="carousel-background carousel-desktop" data-centered-images="@centeredImages">
            <div class="carousel-container">
                <!-- Slick Carousel (items) -->
                <div class="carousel">
                    @foreach (var productNode in row.ListOfProducts) // Assuming 'ListOfProducts2' is the Multinode Treepicker alias
                    {
                        // Cast each productNode to IPublishedContent
                        var product = productNode as IPublishedContent;
                        if (product != null)
                        {
                            // Access the parent node (Tienda Nutrir)
                            var storeNode = product.AncestorOrSelf("store");
                            // Access the store's phone number
                            var storePhoneNumber = storeNode?.Value<string>("phoneNumber");
                            // Access the product's name
                            var name = product.Value<string>("productName");
                            // Access the product's image
                            var picture = product.Value<IPublishedContent>("productImage");
                            // Access the product's description
                            var description = product.Value<string>("productDescription");
                            // Access the product's price
                            var price = product.Value<decimal>("productPrice"); // Assuming price is a decimal
                            // Access the purchase message
                            var purchaseMessage = product.Value<string>("productPurchaseMessage");
                            // Format the price with commas
                            var formattedPrice = price.ToString("N0"); // 'N0' for thousands with no decimals
                                                                       // Render the product information
                            <div class="carousel-item">
                                @if (picture != null)
                                {
                                    <img src="@picture.Url()" alt="@name">
                                }
                                <h2>@name</h2>
                                <p class="price">$@formattedPrice</p>
                                <a href="https://api.whatsapp.com/send/?phone=@storePhoneNumber&text=@purchaseMessage &type=phone_number&app_absent=0" class="buy-button" target="_blank">Compra aquí</a>
                            </div>
                        }
                    }
                </div>
                <a href="@link.Url" class="productsButton" target="_self">Ver Más productos</a>
            </div>

        </div>

        <!-- jQuery and Slick JS -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>
    </section>
    <style>
        .productsButton {
            display: inline-block;
            background-color: #ffffff;
            text-align: center;
            color: #155db0;
            border-color: transparent;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
            margin-top: 20px;
        }

            .productsButton:hover {
                background-color: #1a73e8;
                color: white;
            }


        .carousel-background {
            background-color: #9bc11c;
            width: 100vw; /* Full width of the screen */
            padding: 40px 0;
            display: flex;
            justify-content: center;
        }

        .carousel-container {
            width: 67%;
            position: relative;
            overflow: visible;
            display: flex;
            flex-direction: column;
            align-items: center; /* Center children horizontally */
        }

        .carousel-item {
            background-color: #ffffff;
            text-align: center;
            padding: 20px;
            margin: 10px;
            border-radius: 10px;
            box-shadow: 5px 5px 5px rgb(102, 102, 102);
        }

        .carousel-image-item {
            background-color: #e0dfdf;
            padding: 5px;
            margin: 5px;
            border-radius: 5px;
        }

        .carousel-item img {
            width: 200px;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
        }

        h2 {
            font-size: 1.2em;
            color: #333;
            margin: 10px 0;
        }

        .price {
            font-size: 1.1em;
            color: #666;
            margin: 5px 0;
        }

        .buy-button {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 20px;
            background-color: #1a73e8;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            font-size: 1em;
        }

            .buy-button:hover {
                background-color: #155db0;
            }

        /* Arrow Styles */
        .slick-prev, .slick-next {
            background-color: transparent;
            border-radius: 50%;
            color: white;
            font-size: 24px;
            width: 40px;
            height: 40px;
            line-height: 40px;
            text-align: center;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            z-index: 10; /* Ensure the arrows are on top */
            border: none;
            cursor: pointer;
        }

            .slick-prev:before {
                color: rgb(0, 0, 0);
                font-size: 30px;
            }

            .slick-next:before {
                color: rgb(0, 0, 0);
                font-size: 30px;
            }

        .slick-prev {
            left: -50px; /* Position arrow outside the left edge */
        }

        .slick-next {
            right: -50px; /* Position arrow outside the right edge */
        }

            .slick-prev:hover, .slick-next:hover {
                background-color: transparent;
            }

        /* Slick Dots Styles */
        .slick-dots {
            text-align: center;
            margin-top: 20px;
        }

            .slick-dots li {
                display: inline-block;
                margin: 0 5px;
            }

                .slick-dots li button:before {
                    font-size: 12px;
                    color: #333;
                    opacity: 0.75;
                }

                .slick-dots li.slick-active button:before {
                    color: #1a73e8; /* Active dot color */
                    opacity: 1;
                }
    </style>
</div>

