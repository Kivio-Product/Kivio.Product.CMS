@inherits UmbracoViewPage<BlockListItem>
<script src="~/js/slickControls.js"></script>
<!-- jQuery and Slick JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

@{
	var row = (ImageCarrousel)Model.Content;
	if (row == null) return;
	var listDesktop = row.DesktopImages.ToList();
	var listMobile = row.MobileImages.ToList();
	var multipleImageToggle = row.Value<bool>("multipleImagesAtOnce");
	var heightofImages = row.Value<int>("heightOfImages");
	var centeredImages = row.Value<bool>("centeredImages");

	var uniqueCSSId = GeneralConfigs.AddStyle(row.CustomCss ?? string.Empty);
}
<!-- Image banner Section 
	This section contains a banner. The section is divided in two. One for the desktop viewport and one for the 
	mobile viewport-->

<div class="@uniqueCSSId">
	@if (listMobile.Any())
	{
		<section>
			<!-- Desktop Carousel -->
			<div class="carousel-background carousel-desktop" style="background-color: transparent;" data-amount-of-images="@(multipleImageToggle ? 4 : 1)" data-centered-images="@centeredImages">
				<div class="carousel-container" style=" width: 70%;">
					<!-- Slick Carousel (desktop items) -->
					<div class="carousel">
						@foreach (var element in listDesktop)
						{
							// Loop through each element in the block list
							var content = element.Content as IPublishedElement;
							// Access the text value
							var caption = content.Value<string>("caption");
							// Access the image (assuming it's a single image picker)
							var image = content.Value<IPublishedContent>("image");
							<div class="carousel-image-item" style="background-color: transparent;">
								<img src="@image.Url()" alt="@caption" style="height: @(heightofImages + "px");">
							</div>
						}
					</div>
				</div>
			</div>
			<!-- Mobile Carousel -->
			<div class="carousel-background carousel-mobile" style="background-color: transparent;" data-amount-of-images="@(multipleImageToggle ? 4 : 1)" data-centered-images="@centeredImages">
				<div class="carousel-container" style=" width: 90%;">
					<!-- Slick Carousel (mobile items) -->
					<div class="carousel" style=" width: 100%;">
						@foreach (var element in listMobile)
						{
							// Loop through each element in the block list
							var content = element.Content as IPublishedElement;
							// Access the text value
							var caption = content.Value<string>("caption");
							// Access the image (assuming it's a single image picker)
							var image = content.Value<IPublishedContent>("image");
							<div class="carousel-image-item" style="background-color: transparent;">
								<img src="@image.Url()" alt="@caption" style="height: @((heightofImages-400) + "px");">
							</div>
						}
					</div>
				</div>
			</div>
		</section>
	}
	else
	{
		<section>
			<div class="carousel-background carousel-desktop" style="background-color: transparent;" data-amount-of-images="@(multipleImageToggle ? 4 : 1)" data-centered-images="@centeredImages">
				<div class="carousel-container">
					<!-- Slick Carousel (items) -->
					<div class="carousel">
						@foreach (var element in listDesktop)
						{
							// Loop through each element in the block list
							var content = element.Content as IPublishedElement;
							// Access the text value
							var caption = content.Value<string>("caption");
							// Access the image (assuming it's a single image picker)
							var image = content.Value<IPublishedContent>("image");
							<div class="carousel-image-item">
								<img src="@image.Url()" alt="@caption" style="height: @(heightofImages + "px");">
							</div>
						}
					</div>
				</div>
			</div>
			<!-- Mobile Carousel -->
			<div class="carousel-background carousel-mobile" style="background-color: transparent;" data-amount-of-images="@(multipleImageToggle ? 4 : 1)" data-centered-images="@centeredImages">
				<div class="carousel-container" style=" width: 90%;">
					<!-- Slick Carousel (mobile items) -->
					<div class="carousel" style=" width: 100%;">
						@foreach (var element in listDesktop)
						{
							// Loop through each element in the block list
							var content = element.Content as IPublishedElement;
							// Access the text value
							var caption = content.Value<string>("caption");
							// Access the image (assuming it's a single image picker)
							var image = content.Value<IPublishedContent>("image");
							<div class="carousel-image-item" style="background-color: transparent;">
								<img src="@image.Url()" alt="@caption" style="height: @((heightofImages) + "px");">
							</div>
						}
					</div>
				</div>
			</div>
		</section>
	}
</div>

